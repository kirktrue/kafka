classic_group_protocol_tests:

  - 'kafkatest/tests/client/consumer_rolling_upgrade_test.py::ConsumerRollingUpgradeTest.rolling_update_test@{"metadata_quorum": "COMBINED_KRAFT", "use_new_coordinator": true, "group_protocol": "classic"}'
  - 'kafkatest/tests/client/consumer_rolling_upgrade_test.py::ConsumerRollingUpgradeTest.rolling_update_test@{"metadata_quorum": "ISOLATED_KRAFT", "use_new_coordinator": true, "group_protocol": "classic"}'
  - 'kafkatest/tests/client/consumer_test.py::OffsetValidationTest.test_broker_failure@{"clean_shutdown": false, "enable_autocommit": false, "metadata_quorum": "ISOLATED_KRAFT", "use_new_coordinator": true, "group_protocol": "classic"}'
  - 'kafkatest/tests/client/consumer_test.py::OffsetValidationTest.test_broker_failure@{"clean_shutdown": false, "enable_autocommit": true, "metadata_quorum": "ISOLATED_KRAFT", "use_new_coordinator": true, "group_protocol": "classic"}'
  - 'kafkatest/tests/client/consumer_test.py::OffsetValidationTest.test_broker_failure@{"clean_shutdown": true, "enable_autocommit": false, "metadata_quorum": "ISOLATED_KRAFT", "use_new_coordinator": true, "group_protocol": "classic"}'
  - 'kafkatest/tests/client/consumer_test.py::OffsetValidationTest.test_broker_failure@{"clean_shutdown": true, "enable_autocommit": true, "metadata_quorum": "ISOLATED_KRAFT", "use_new_coordinator": true, "group_protocol": "classic"}'
  - 'kafkatest/tests/client/consumer_test.py::OffsetValidationTest.test_broker_rolling_bounce@{"metadata_quorum": "ISOLATED_KRAFT", "use_new_coordinator": true, "group_protocol": "classic"}'
  - 'kafkatest/tests/client/consumer_test.py::OffsetValidationTest.test_consumer_bounce@{"clean_shutdown": true, "bounce_mode": "all", "metadata_quorum": "ISOLATED_KRAFT", "use_new_coordinator": true, "group_protocol": "classic"}'
  - 'kafkatest/tests/client/consumer_test.py::OffsetValidationTest.test_consumer_bounce@{"clean_shutdown": true, "bounce_mode": "rolling", "metadata_quorum": "ISOLATED_KRAFT", "use_new_coordinator": true, "group_protocol": "classic"}'
  - 'kafkatest/tests/client/consumer_test.py::OffsetValidationTest.test_consumer_failure@{"clean_shutdown": true, "enable_autocommit": false, "metadata_quorum": "ISOLATED_KRAFT", "use_new_coordinator": true, "group_protocol": "classic"}'
  - 'kafkatest/tests/client/consumer_test.py::OffsetValidationTest.test_consumer_failure@{"clean_shutdown": true, "enable_autocommit": true, "metadata_quorum": "ISOLATED_KRAFT", "use_new_coordinator": true, "group_protocol": "classic"}'
  - 'kafkatest/tests/client/consumer_test.py::OffsetValidationTest.test_group_consumption@{"metadata_quorum": "ISOLATED_KRAFT", "use_new_coordinator": true, "group_protocol": "classic"}'
  - 'kafkatest/tests/connect/connect_distributed_test.py::ConnectDistributedTest.test_bounce@{"clean": false, "connect_protocol": "compatible", "metadata_quorum": "ISOLATED_KRAFT", "use_new_coordinator": true, "group_protocol": "classic"}'
  - 'kafkatest/tests/connect/connect_distributed_test.py::ConnectDistributedTest.test_bounce@{"clean": false, "connect_protocol": "eager", "metadata_quorum": "ISOLATED_KRAFT", "use_new_coordinator": true, "group_protocol": "classic"}'
  - 'kafkatest/tests/connect/connect_distributed_test.py::ConnectDistributedTest.test_bounce@{"clean": false, "connect_protocol": "sessioned", "metadata_quorum": "ISOLATED_KRAFT", "use_new_coordinator": true, "group_protocol": "classic"}'
  - 'kafkatest/tests/connect/connect_distributed_test.py::ConnectDistributedTest.test_bounce@{"clean": true, "connect_protocol": "compatible", "metadata_quorum": "ISOLATED_KRAFT", "use_new_coordinator": true, "group_protocol": "classic"}'
  - 'kafkatest/tests/connect/connect_distributed_test.py::ConnectDistributedTest.test_bounce@{"clean": true, "connect_protocol": "eager", "metadata_quorum": "ISOLATED_KRAFT", "use_new_coordinator": true, "group_protocol": "classic"}'
  - 'kafkatest/tests/connect/connect_distributed_test.py::ConnectDistributedTest.test_bounce@{"clean": true, "connect_protocol": "sessioned", "metadata_quorum": "ISOLATED_KRAFT", "use_new_coordinator": true, "group_protocol": "classic"}'
  - 'kafkatest/tests/connect/connect_distributed_test.py::ConnectDistributedTest.test_exactly_once_source@{"clean": false, "connect_protocol": "compatible", "metadata_quorum": "ISOLATED_KRAFT", "use_new_coordinator": true, "group_protocol": "classic"}'
  - 'kafkatest/tests/connect/connect_distributed_test.py::ConnectDistributedTest.test_exactly_once_source@{"clean": false, "connect_protocol": "eager", "metadata_quorum": "ISOLATED_KRAFT", "use_new_coordinator": true, "group_protocol": "classic"}'
  - 'kafkatest/tests/connect/connect_distributed_test.py::ConnectDistributedTest.test_exactly_once_source@{"clean": false, "connect_protocol": "sessioned", "metadata_quorum": "ISOLATED_KRAFT", "use_new_coordinator": true, "group_protocol": "classic"}'
  - 'kafkatest/tests/connect/connect_distributed_test.py::ConnectDistributedTest.test_exactly_once_source@{"clean": true, "connect_protocol": "compatible", "metadata_quorum": "ISOLATED_KRAFT", "use_new_coordinator": true, "group_protocol": "classic"}'
  - 'kafkatest/tests/connect/connect_distributed_test.py::ConnectDistributedTest.test_exactly_once_source@{"clean": true, "connect_protocol": "eager", "metadata_quorum": "ISOLATED_KRAFT", "use_new_coordinator": true, "group_protocol": "classic"}'
  - 'kafkatest/tests/connect/connect_distributed_test.py::ConnectDistributedTest.test_exactly_once_source@{"clean": true, "connect_protocol": "sessioned", "metadata_quorum": "ISOLATED_KRAFT", "use_new_coordinator": true, "group_protocol": "classic"}'
  - 'kafkatest/tests/connect/connect_distributed_test.py::ConnectDistributedTest.test_transformations@{"connect_protocol": "compatible", "metadata_quorum": "ISOLATED_KRAFT", "use_new_coordinator": true, "group_protocol": "classic"}'
  - 'kafkatest/tests/connect/connect_distributed_test.py::ConnectDistributedTest.test_transformations@{"connect_protocol": "eager", "metadata_quorum": "ISOLATED_KRAFT", "use_new_coordinator": true, "group_protocol": "classic"}'
  - 'kafkatest/tests/connect/connect_distributed_test.py::ConnectDistributedTest.test_transformations@{"connect_protocol": "sessioned", "metadata_quorum": "ISOLATED_KRAFT", "use_new_coordinator": true, "group_protocol": "classic"}'
  - 'kafkatest/tests/core/consume_bench_test.py::ConsumeBenchTest.test_multiple_consumers_random_group_partitions@{"metadata_quorum": "ISOLATED_KRAFT", "use_new_coordinator": true, "group_protocol": "classic"}'
  - 'kafkatest/tests/core/consume_bench_test.py::ConsumeBenchTest.test_multiple_consumers_random_group_topics@{"metadata_quorum": "ISOLATED_KRAFT", "use_new_coordinator": true, "group_protocol": "classic"}'
  - 'kafkatest/tests/core/consume_bench_test.py::ConsumeBenchTest.test_multiple_consumers_specified_group_partitions_should_raise@{"metadata_quorum": "ISOLATED_KRAFT", "use_new_coordinator": true, "group_protocol": "classic"}'
  - 'kafkatest/tests/core/consume_bench_test.py::ConsumeBenchTest.test_single_partition@{"metadata_quorum": "ISOLATED_KRAFT", "use_new_coordinator": true, "group_protocol": "classic"}'
  - 'kafkatest/tests/core/consume_bench_test.py::ConsumeBenchTest.test_two_consumers_specified_group_topics@{"metadata_quorum": "ISOLATED_KRAFT", "use_new_coordinator": true, "group_protocol": "classic"}'
  - 'kafkatest/tests/core/consumer_group_command_test.py::ConsumerGroupCommandTest.test_describe_consumer_group@{"security_protocol": "PLAINTEXT", "metadata_quorum": "ISOLATED_KRAFT", "use_new_coordinator": true, "group_protocol": "classic"}'
  - 'kafkatest/tests/core/consumer_group_command_test.py::ConsumerGroupCommandTest.test_describe_consumer_group@{"security_protocol": "SSL", "metadata_quorum": "ISOLATED_KRAFT", "use_new_coordinator": true, "group_protocol": "classic"}'
  - 'kafkatest/tests/core/consumer_group_command_test.py::ConsumerGroupCommandTest.test_list_consumer_groups@{"security_protocol": "PLAINTEXT", "metadata_quorum": "ISOLATED_KRAFT", "use_new_coordinator": true, "group_protocol": "classic"}'
  - 'kafkatest/tests/core/consumer_group_command_test.py::ConsumerGroupCommandTest.test_list_consumer_groups@{"security_protocol": "SSL", "metadata_quorum": "ISOLATED_KRAFT", "use_new_coordinator": true, "group_protocol": "classic"}'
  - 'kafkatest/tests/core/fetch_from_follower_test.py::FetchFromFollowerTest.test_consumer_preferred_read_replica@{"metadata_quorum": "ISOLATED_KRAFT", "use_new_coordinator": true, "group_protocol": "classic"}'
  - 'kafkatest/tests/core/reassign_partitions_test.py::ReassignPartitionsTest.test_reassign_partitions@{"bounce_brokers": false, "reassign_from_offset_zero": false, "metadata_quorum": "ISOLATED_KRAFT", "use_new_coordinator": true, "group_protocol": "classic"}'
  - 'kafkatest/tests/core/reassign_partitions_test.py::ReassignPartitionsTest.test_reassign_partitions@{"bounce_brokers": false, "reassign_from_offset_zero": true, "metadata_quorum": "ISOLATED_KRAFT", "use_new_coordinator": true, "group_protocol": "classic"}'
  - 'kafkatest/tests/core/reassign_partitions_test.py::ReassignPartitionsTest.test_reassign_partitions@{"bounce_brokers": true, "reassign_from_offset_zero": false, "metadata_quorum": "ISOLATED_KRAFT", "use_new_coordinator": true, "group_protocol": "classic"}'
  - 'kafkatest/tests/core/reassign_partitions_test.py::ReassignPartitionsTest.test_reassign_partitions@{"bounce_brokers": true, "reassign_from_offset_zero": true, "metadata_quorum": "ISOLATED_KRAFT", "use_new_coordinator": true, "group_protocol": "classic"}'
  - 'kafkatest/tests/core/replica_scale_test.py::ReplicaScaleTest.test_produce_consume@{"topic_count": 50, "partition_count": 34, "replication_factor": 3, "metadata_quorum": "ISOLATED_KRAFT", "use_new_coordinator": true, "group_protocol": "classic"}'
  - 'kafkatest/tests/core/snapshot_test.py::TestSnapshots.test_broker@{"metadata_quorum": "COMBINED_KRAFT", "use_new_coordinator": true, "group_protocol": "classic"}'
  - 'kafkatest/tests/core/snapshot_test.py::TestSnapshots.test_broker@{"metadata_quorum": "ISOLATED_KRAFT", "use_new_coordinator": true, "group_protocol": "classic"}'
  - 'kafkatest/tests/core/snapshot_test.py::TestSnapshots.test_controller@{"metadata_quorum": "COMBINED_KRAFT", "use_new_coordinator": true, "group_protocol": "classic"}'
  - 'kafkatest/tests/core/snapshot_test.py::TestSnapshots.test_controller@{"metadata_quorum": "ISOLATED_KRAFT", "use_new_coordinator": true, "group_protocol": "classic"}'
  - 'kafkatest/tests/core/transactions_test.py::TransactionsTest.test_transactions@{"failure_mode": "clean_bounce", "bounce_target": "brokers", "check_order": false, "use_group_metadata": false, "metadata_quorum": "COMBINED_KRAFT", "use_new_coordinator": true, "group_protocol": "classic"}'
  - 'kafkatest/tests/core/transactions_test.py::TransactionsTest.test_transactions@{"failure_mode": "clean_bounce", "bounce_target": "brokers", "check_order": false, "use_group_metadata": false, "metadata_quorum": "ISOLATED_KRAFT", "use_new_coordinator": true, "group_protocol": "classic"}'
  - 'kafkatest/tests/core/transactions_test.py::TransactionsTest.test_transactions@{"failure_mode": "clean_bounce", "bounce_target": "brokers", "check_order": false, "use_group_metadata": true, "metadata_quorum": "COMBINED_KRAFT", "use_new_coordinator": true, "group_protocol": "classic"}'
  - 'kafkatest/tests/core/transactions_test.py::TransactionsTest.test_transactions@{"failure_mode": "clean_bounce", "bounce_target": "brokers", "check_order": false, "use_group_metadata": true, "metadata_quorum": "ISOLATED_KRAFT", "use_new_coordinator": true, "group_protocol": "classic"}'
  - 'kafkatest/tests/core/transactions_test.py::TransactionsTest.test_transactions@{"failure_mode": "clean_bounce", "bounce_target": "brokers", "check_order": true, "use_group_metadata": false, "metadata_quorum": "COMBINED_KRAFT", "use_new_coordinator": true, "group_protocol": "classic"}'
  - 'kafkatest/tests/core/transactions_test.py::TransactionsTest.test_transactions@{"failure_mode": "clean_bounce", "bounce_target": "brokers", "check_order": true, "use_group_metadata": false, "metadata_quorum": "ISOLATED_KRAFT", "use_new_coordinator": true, "group_protocol": "classic"}'
  - 'kafkatest/tests/core/transactions_test.py::TransactionsTest.test_transactions@{"failure_mode": "clean_bounce", "bounce_target": "brokers", "check_order": true, "use_group_metadata": true, "metadata_quorum": "COMBINED_KRAFT", "use_new_coordinator": true, "group_protocol": "classic"}'
  - 'kafkatest/tests/core/transactions_test.py::TransactionsTest.test_transactions@{"failure_mode": "clean_bounce", "bounce_target": "brokers", "check_order": true, "use_group_metadata": true, "metadata_quorum": "ISOLATED_KRAFT", "use_new_coordinator": true, "group_protocol": "classic"}'
  - 'kafkatest/tests/core/transactions_test.py::TransactionsTest.test_transactions@{"failure_mode": "clean_bounce", "bounce_target": "clients", "check_order": false, "use_group_metadata": false, "metadata_quorum": "COMBINED_KRAFT", "use_new_coordinator": true, "group_protocol": "classic"}'
  - 'kafkatest/tests/core/transactions_test.py::TransactionsTest.test_transactions@{"failure_mode": "clean_bounce", "bounce_target": "clients", "check_order": false, "use_group_metadata": false, "metadata_quorum": "ISOLATED_KRAFT", "use_new_coordinator": true, "group_protocol": "classic"}'
  - 'kafkatest/tests/core/transactions_test.py::TransactionsTest.test_transactions@{"failure_mode": "clean_bounce", "bounce_target": "clients", "check_order": false, "use_group_metadata": true, "metadata_quorum": "COMBINED_KRAFT", "use_new_coordinator": true, "group_protocol": "classic"}'
  - 'kafkatest/tests/core/transactions_test.py::TransactionsTest.test_transactions@{"failure_mode": "clean_bounce", "bounce_target": "clients", "check_order": false, "use_group_metadata": true, "metadata_quorum": "ISOLATED_KRAFT", "use_new_coordinator": true, "group_protocol": "classic"}'
  - 'kafkatest/tests/core/transactions_test.py::TransactionsTest.test_transactions@{"failure_mode": "clean_bounce", "bounce_target": "clients", "check_order": true, "use_group_metadata": false, "metadata_quorum": "COMBINED_KRAFT", "use_new_coordinator": true, "group_protocol": "classic"}'
  - 'kafkatest/tests/core/transactions_test.py::TransactionsTest.test_transactions@{"failure_mode": "clean_bounce", "bounce_target": "clients", "check_order": true, "use_group_metadata": false, "metadata_quorum": "ISOLATED_KRAFT", "use_new_coordinator": true, "group_protocol": "classic"}'
  - 'kafkatest/tests/core/transactions_test.py::TransactionsTest.test_transactions@{"failure_mode": "clean_bounce", "bounce_target": "clients", "check_order": true, "use_group_metadata": true, "metadata_quorum": "COMBINED_KRAFT", "use_new_coordinator": true, "group_protocol": "classic"}'
  - 'kafkatest/tests/core/transactions_test.py::TransactionsTest.test_transactions@{"failure_mode": "clean_bounce", "bounce_target": "clients", "check_order": true, "use_group_metadata": true, "metadata_quorum": "ISOLATED_KRAFT", "use_new_coordinator": true, "group_protocol": "classic"}'
  - 'kafkatest/tests/core/transactions_test.py::TransactionsTest.test_transactions@{"failure_mode": "hard_bounce", "bounce_target": "brokers", "check_order": false, "use_group_metadata": false, "metadata_quorum": "COMBINED_KRAFT", "use_new_coordinator": true, "group_protocol": "classic"}'
  - 'kafkatest/tests/core/transactions_test.py::TransactionsTest.test_transactions@{"failure_mode": "hard_bounce", "bounce_target": "brokers", "check_order": false, "use_group_metadata": false, "metadata_quorum": "ISOLATED_KRAFT", "use_new_coordinator": true, "group_protocol": "classic"}'
  - 'kafkatest/tests/core/transactions_test.py::TransactionsTest.test_transactions@{"failure_mode": "hard_bounce", "bounce_target": "brokers", "check_order": false, "use_group_metadata": true, "metadata_quorum": "COMBINED_KRAFT", "use_new_coordinator": true, "group_protocol": "classic"}'
  - 'kafkatest/tests/core/transactions_test.py::TransactionsTest.test_transactions@{"failure_mode": "hard_bounce", "bounce_target": "brokers", "check_order": false, "use_group_metadata": true, "metadata_quorum": "ISOLATED_KRAFT", "use_new_coordinator": true, "group_protocol": "classic"}'
  - 'kafkatest/tests/core/transactions_test.py::TransactionsTest.test_transactions@{"failure_mode": "hard_bounce", "bounce_target": "brokers", "check_order": true, "use_group_metadata": false, "metadata_quorum": "COMBINED_KRAFT", "use_new_coordinator": true, "group_protocol": "classic"}'
  - 'kafkatest/tests/core/transactions_test.py::TransactionsTest.test_transactions@{"failure_mode": "hard_bounce", "bounce_target": "brokers", "check_order": true, "use_group_metadata": false, "metadata_quorum": "ISOLATED_KRAFT", "use_new_coordinator": true, "group_protocol": "classic"}'
  - 'kafkatest/tests/core/transactions_test.py::TransactionsTest.test_transactions@{"failure_mode": "hard_bounce", "bounce_target": "brokers", "check_order": true, "use_group_metadata": true, "metadata_quorum": "COMBINED_KRAFT", "use_new_coordinator": true, "group_protocol": "classic"}'
  - 'kafkatest/tests/core/transactions_test.py::TransactionsTest.test_transactions@{"failure_mode": "hard_bounce", "bounce_target": "brokers", "check_order": true, "use_group_metadata": true, "metadata_quorum": "ISOLATED_KRAFT", "use_new_coordinator": true, "group_protocol": "classic"}'
  - 'kafkatest/tests/core/transactions_test.py::TransactionsTest.test_transactions@{"failure_mode": "hard_bounce", "bounce_target": "clients", "check_order": false, "use_group_metadata": false, "metadata_quorum": "COMBINED_KRAFT", "use_new_coordinator": true, "group_protocol": "classic"}'
  - 'kafkatest/tests/core/transactions_test.py::TransactionsTest.test_transactions@{"failure_mode": "hard_bounce", "bounce_target": "clients", "check_order": false, "use_group_metadata": false, "metadata_quorum": "ISOLATED_KRAFT", "use_new_coordinator": true, "group_protocol": "classic"}'
  - 'kafkatest/tests/core/transactions_test.py::TransactionsTest.test_transactions@{"failure_mode": "hard_bounce", "bounce_target": "clients", "check_order": false, "use_group_metadata": true, "metadata_quorum": "COMBINED_KRAFT", "use_new_coordinator": true, "group_protocol": "classic"}'
  - 'kafkatest/tests/core/transactions_test.py::TransactionsTest.test_transactions@{"failure_mode": "hard_bounce", "bounce_target": "clients", "check_order": false, "use_group_metadata": true, "metadata_quorum": "ISOLATED_KRAFT", "use_new_coordinator": true, "group_protocol": "classic"}'
  - 'kafkatest/tests/core/transactions_test.py::TransactionsTest.test_transactions@{"failure_mode": "hard_bounce", "bounce_target": "clients", "check_order": true, "use_group_metadata": false, "metadata_quorum": "COMBINED_KRAFT", "use_new_coordinator": true, "group_protocol": "classic"}'
  - 'kafkatest/tests/core/transactions_test.py::TransactionsTest.test_transactions@{"failure_mode": "hard_bounce", "bounce_target": "clients", "check_order": true, "use_group_metadata": false, "metadata_quorum": "ISOLATED_KRAFT", "use_new_coordinator": true, "group_protocol": "classic"}'
  - 'kafkatest/tests/core/transactions_test.py::TransactionsTest.test_transactions@{"failure_mode": "hard_bounce", "bounce_target": "clients", "check_order": true, "use_group_metadata": true, "metadata_quorum": "COMBINED_KRAFT", "use_new_coordinator": true, "group_protocol": "classic"}'
  - 'kafkatest/tests/core/transactions_test.py::TransactionsTest.test_transactions@{"failure_mode": "hard_bounce", "bounce_target": "clients", "check_order": true, "use_group_metadata": true, "metadata_quorum": "ISOLATED_KRAFT", "use_new_coordinator": true, "group_protocol": "classic"}'
